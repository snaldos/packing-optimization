// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ortools/constraint_solver/solver_parameters.proto
// Protobuf C++ Version: 5.29.3

#ifndef ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto_2epb_2eh
#define ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto OR_PROTO_DLL

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct OR_PROTO_DLL TableStruct_ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto {
  static const ::uint32_t offsets[];
};
OR_PROTO_DLL extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto;
namespace operations_research {
class ConstraintSolverParameters;
struct ConstraintSolverParametersDefaultTypeInternal;
OR_PROTO_DLL extern ConstraintSolverParametersDefaultTypeInternal _ConstraintSolverParameters_default_instance_;
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
enum ConstraintSolverParameters_TrailCompression : int {
  ConstraintSolverParameters_TrailCompression_NO_COMPRESSION = 0,
  ConstraintSolverParameters_TrailCompression_COMPRESS_WITH_ZLIB = 1,
  ConstraintSolverParameters_TrailCompression_ConstraintSolverParameters_TrailCompression_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ConstraintSolverParameters_TrailCompression_ConstraintSolverParameters_TrailCompression_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

OR_PROTO_DLL bool ConstraintSolverParameters_TrailCompression_IsValid(int value);
OR_PROTO_DLL extern const uint32_t ConstraintSolverParameters_TrailCompression_internal_data_[];
constexpr ConstraintSolverParameters_TrailCompression ConstraintSolverParameters_TrailCompression_TrailCompression_MIN = static_cast<ConstraintSolverParameters_TrailCompression>(0);
constexpr ConstraintSolverParameters_TrailCompression ConstraintSolverParameters_TrailCompression_TrailCompression_MAX = static_cast<ConstraintSolverParameters_TrailCompression>(1);
constexpr int ConstraintSolverParameters_TrailCompression_TrailCompression_ARRAYSIZE = 1 + 1;
OR_PROTO_DLL const ::google::protobuf::EnumDescriptor*
ConstraintSolverParameters_TrailCompression_descriptor();
template <typename T>
const std::string& ConstraintSolverParameters_TrailCompression_Name(T value) {
  static_assert(std::is_same<T, ConstraintSolverParameters_TrailCompression>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TrailCompression_Name().");
  return ConstraintSolverParameters_TrailCompression_Name(static_cast<ConstraintSolverParameters_TrailCompression>(value));
}
template <>
inline const std::string& ConstraintSolverParameters_TrailCompression_Name(ConstraintSolverParameters_TrailCompression value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ConstraintSolverParameters_TrailCompression_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ConstraintSolverParameters_TrailCompression_Parse(absl::string_view name, ConstraintSolverParameters_TrailCompression* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConstraintSolverParameters_TrailCompression>(
      ConstraintSolverParameters_TrailCompression_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OR_PROTO_DLL ConstraintSolverParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:operations_research.ConstraintSolverParameters) */ {
 public:
  inline ConstraintSolverParameters() : ConstraintSolverParameters(nullptr) {}
  ~ConstraintSolverParameters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConstraintSolverParameters* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConstraintSolverParameters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConstraintSolverParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConstraintSolverParameters(const ConstraintSolverParameters& from) : ConstraintSolverParameters(nullptr, from) {}
  inline ConstraintSolverParameters(ConstraintSolverParameters&& from) noexcept
      : ConstraintSolverParameters(nullptr, std::move(from)) {}
  inline ConstraintSolverParameters& operator=(const ConstraintSolverParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstraintSolverParameters& operator=(ConstraintSolverParameters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConstraintSolverParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConstraintSolverParameters* internal_default_instance() {
    return reinterpret_cast<const ConstraintSolverParameters*>(
        &_ConstraintSolverParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConstraintSolverParameters& a, ConstraintSolverParameters& b) { a.Swap(&b); }
  inline void Swap(ConstraintSolverParameters* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConstraintSolverParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConstraintSolverParameters* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConstraintSolverParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConstraintSolverParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConstraintSolverParameters& from) { ConstraintSolverParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConstraintSolverParameters* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "operations_research.ConstraintSolverParameters"; }

 protected:
  explicit ConstraintSolverParameters(::google::protobuf::Arena* arena);
  ConstraintSolverParameters(::google::protobuf::Arena* arena, const ConstraintSolverParameters& from);
  ConstraintSolverParameters(::google::protobuf::Arena* arena, ConstraintSolverParameters&& from) noexcept
      : ConstraintSolverParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TrailCompression = ConstraintSolverParameters_TrailCompression;
  static constexpr TrailCompression NO_COMPRESSION = ConstraintSolverParameters_TrailCompression_NO_COMPRESSION;
  static constexpr TrailCompression COMPRESS_WITH_ZLIB = ConstraintSolverParameters_TrailCompression_COMPRESS_WITH_ZLIB;
  static inline bool TrailCompression_IsValid(int value) {
    return ConstraintSolverParameters_TrailCompression_IsValid(value);
  }
  static constexpr TrailCompression TrailCompression_MIN = ConstraintSolverParameters_TrailCompression_TrailCompression_MIN;
  static constexpr TrailCompression TrailCompression_MAX = ConstraintSolverParameters_TrailCompression_TrailCompression_MAX;
  static constexpr int TrailCompression_ARRAYSIZE = ConstraintSolverParameters_TrailCompression_TrailCompression_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TrailCompression_descriptor() {
    return ConstraintSolverParameters_TrailCompression_descriptor();
  }
  template <typename T>
  static inline const std::string& TrailCompression_Name(T value) {
    return ConstraintSolverParameters_TrailCompression_Name(value);
  }
  static inline bool TrailCompression_Parse(absl::string_view name, TrailCompression* value) {
    return ConstraintSolverParameters_TrailCompression_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kProfileFileFieldNumber = 8,
    kCompressTrailFieldNumber = 1,
    kTrailBlockSizeFieldNumber = 2,
    kArraySplitSizeFieldNumber = 3,
    kStoreNamesFieldNumber = 4,
    kNameCastVariablesFieldNumber = 5,
    kNameAllVariablesFieldNumber = 6,
    kProfilePropagationFieldNumber = 7,
    kPrintModelFieldNumber = 11,
    kPrintModelStatsFieldNumber = 12,
    kPrintAddedConstraintsFieldNumber = 13,
    kDisableSolveFieldNumber = 15,
    kProfileLocalSearchFieldNumber = 16,
    kPrintLocalSearchProfileFieldNumber = 17,
    kTracePropagationFieldNumber = 9,
    kTraceSearchFieldNumber = 10,
    kUseSmallTableFieldNumber = 101,
    kUseCumulativeEdgeFinderFieldNumber = 105,
    kUseCumulativeTimeTableFieldNumber = 106,
    kUseCumulativeTimeTableSyncFieldNumber = 112,
    kMaxEdgeFinderSizeFieldNumber = 109,
    kUseSequenceHighDemandTasksFieldNumber = 107,
    kUseAllPossibleDisjunctionsFieldNumber = 108,
    kDiffnUseCumulativeFieldNumber = 110,
    kUseElementRmqFieldNumber = 111,
    kSkipLocallyOptimalPathsFieldNumber = 113,
    kCheckSolutionPeriodFieldNumber = 114,
  };
  // string profile_file = 8;
  void clear_profile_file() ;
  const std::string& profile_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_profile_file(Arg_&& arg, Args_... args);
  std::string* mutable_profile_file();
  PROTOBUF_NODISCARD std::string* release_profile_file();
  void set_allocated_profile_file(std::string* value);

  private:
  const std::string& _internal_profile_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_profile_file(
      const std::string& value);
  std::string* _internal_mutable_profile_file();

  public:
  // .operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;
  void clear_compress_trail() ;
  ::operations_research::ConstraintSolverParameters_TrailCompression compress_trail() const;
  void set_compress_trail(::operations_research::ConstraintSolverParameters_TrailCompression value);

  private:
  ::operations_research::ConstraintSolverParameters_TrailCompression _internal_compress_trail() const;
  void _internal_set_compress_trail(::operations_research::ConstraintSolverParameters_TrailCompression value);

  public:
  // int32 trail_block_size = 2;
  void clear_trail_block_size() ;
  ::int32_t trail_block_size() const;
  void set_trail_block_size(::int32_t value);

  private:
  ::int32_t _internal_trail_block_size() const;
  void _internal_set_trail_block_size(::int32_t value);

  public:
  // int32 array_split_size = 3;
  void clear_array_split_size() ;
  ::int32_t array_split_size() const;
  void set_array_split_size(::int32_t value);

  private:
  ::int32_t _internal_array_split_size() const;
  void _internal_set_array_split_size(::int32_t value);

  public:
  // bool store_names = 4;
  void clear_store_names() ;
  bool store_names() const;
  void set_store_names(bool value);

  private:
  bool _internal_store_names() const;
  void _internal_set_store_names(bool value);

  public:
  // bool name_cast_variables = 5;
  void clear_name_cast_variables() ;
  bool name_cast_variables() const;
  void set_name_cast_variables(bool value);

  private:
  bool _internal_name_cast_variables() const;
  void _internal_set_name_cast_variables(bool value);

  public:
  // bool name_all_variables = 6;
  void clear_name_all_variables() ;
  bool name_all_variables() const;
  void set_name_all_variables(bool value);

  private:
  bool _internal_name_all_variables() const;
  void _internal_set_name_all_variables(bool value);

  public:
  // bool profile_propagation = 7;
  void clear_profile_propagation() ;
  bool profile_propagation() const;
  void set_profile_propagation(bool value);

  private:
  bool _internal_profile_propagation() const;
  void _internal_set_profile_propagation(bool value);

  public:
  // bool print_model = 11;
  void clear_print_model() ;
  bool print_model() const;
  void set_print_model(bool value);

  private:
  bool _internal_print_model() const;
  void _internal_set_print_model(bool value);

  public:
  // bool print_model_stats = 12;
  void clear_print_model_stats() ;
  bool print_model_stats() const;
  void set_print_model_stats(bool value);

  private:
  bool _internal_print_model_stats() const;
  void _internal_set_print_model_stats(bool value);

  public:
  // bool print_added_constraints = 13;
  void clear_print_added_constraints() ;
  bool print_added_constraints() const;
  void set_print_added_constraints(bool value);

  private:
  bool _internal_print_added_constraints() const;
  void _internal_set_print_added_constraints(bool value);

  public:
  // bool disable_solve = 15;
  void clear_disable_solve() ;
  bool disable_solve() const;
  void set_disable_solve(bool value);

  private:
  bool _internal_disable_solve() const;
  void _internal_set_disable_solve(bool value);

  public:
  // bool profile_local_search = 16;
  void clear_profile_local_search() ;
  bool profile_local_search() const;
  void set_profile_local_search(bool value);

  private:
  bool _internal_profile_local_search() const;
  void _internal_set_profile_local_search(bool value);

  public:
  // bool print_local_search_profile = 17;
  void clear_print_local_search_profile() ;
  bool print_local_search_profile() const;
  void set_print_local_search_profile(bool value);

  private:
  bool _internal_print_local_search_profile() const;
  void _internal_set_print_local_search_profile(bool value);

  public:
  // bool trace_propagation = 9;
  void clear_trace_propagation() ;
  bool trace_propagation() const;
  void set_trace_propagation(bool value);

  private:
  bool _internal_trace_propagation() const;
  void _internal_set_trace_propagation(bool value);

  public:
  // bool trace_search = 10;
  void clear_trace_search() ;
  bool trace_search() const;
  void set_trace_search(bool value);

  private:
  bool _internal_trace_search() const;
  void _internal_set_trace_search(bool value);

  public:
  // bool use_small_table = 101;
  void clear_use_small_table() ;
  bool use_small_table() const;
  void set_use_small_table(bool value);

  private:
  bool _internal_use_small_table() const;
  void _internal_set_use_small_table(bool value);

  public:
  // bool use_cumulative_edge_finder = 105;
  void clear_use_cumulative_edge_finder() ;
  bool use_cumulative_edge_finder() const;
  void set_use_cumulative_edge_finder(bool value);

  private:
  bool _internal_use_cumulative_edge_finder() const;
  void _internal_set_use_cumulative_edge_finder(bool value);

  public:
  // bool use_cumulative_time_table = 106;
  void clear_use_cumulative_time_table() ;
  bool use_cumulative_time_table() const;
  void set_use_cumulative_time_table(bool value);

  private:
  bool _internal_use_cumulative_time_table() const;
  void _internal_set_use_cumulative_time_table(bool value);

  public:
  // bool use_cumulative_time_table_sync = 112;
  void clear_use_cumulative_time_table_sync() ;
  bool use_cumulative_time_table_sync() const;
  void set_use_cumulative_time_table_sync(bool value);

  private:
  bool _internal_use_cumulative_time_table_sync() const;
  void _internal_set_use_cumulative_time_table_sync(bool value);

  public:
  // int32 max_edge_finder_size = 109;
  void clear_max_edge_finder_size() ;
  ::int32_t max_edge_finder_size() const;
  void set_max_edge_finder_size(::int32_t value);

  private:
  ::int32_t _internal_max_edge_finder_size() const;
  void _internal_set_max_edge_finder_size(::int32_t value);

  public:
  // bool use_sequence_high_demand_tasks = 107;
  void clear_use_sequence_high_demand_tasks() ;
  bool use_sequence_high_demand_tasks() const;
  void set_use_sequence_high_demand_tasks(bool value);

  private:
  bool _internal_use_sequence_high_demand_tasks() const;
  void _internal_set_use_sequence_high_demand_tasks(bool value);

  public:
  // bool use_all_possible_disjunctions = 108;
  void clear_use_all_possible_disjunctions() ;
  bool use_all_possible_disjunctions() const;
  void set_use_all_possible_disjunctions(bool value);

  private:
  bool _internal_use_all_possible_disjunctions() const;
  void _internal_set_use_all_possible_disjunctions(bool value);

  public:
  // bool diffn_use_cumulative = 110;
  void clear_diffn_use_cumulative() ;
  bool diffn_use_cumulative() const;
  void set_diffn_use_cumulative(bool value);

  private:
  bool _internal_diffn_use_cumulative() const;
  void _internal_set_diffn_use_cumulative(bool value);

  public:
  // bool use_element_rmq = 111;
  void clear_use_element_rmq() ;
  bool use_element_rmq() const;
  void set_use_element_rmq(bool value);

  private:
  bool _internal_use_element_rmq() const;
  void _internal_set_use_element_rmq(bool value);

  public:
  // bool skip_locally_optimal_paths = 113;
  void clear_skip_locally_optimal_paths() ;
  bool skip_locally_optimal_paths() const;
  void set_skip_locally_optimal_paths(bool value);

  private:
  bool _internal_skip_locally_optimal_paths() const;
  void _internal_set_skip_locally_optimal_paths(bool value);

  public:
  // int32 check_solution_period = 114;
  void clear_check_solution_period() ;
  ::int32_t check_solution_period() const;
  void set_check_solution_period(::int32_t value);

  private:
  ::int32_t _internal_check_solution_period() const;
  void _internal_set_check_solution_period(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.ConstraintSolverParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 27, 0,
      91, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConstraintSolverParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr profile_file_;
    int compress_trail_;
    ::int32_t trail_block_size_;
    ::int32_t array_split_size_;
    bool store_names_;
    bool name_cast_variables_;
    bool name_all_variables_;
    bool profile_propagation_;
    bool print_model_;
    bool print_model_stats_;
    bool print_added_constraints_;
    bool disable_solve_;
    bool profile_local_search_;
    bool print_local_search_profile_;
    bool trace_propagation_;
    bool trace_search_;
    bool use_small_table_;
    bool use_cumulative_edge_finder_;
    bool use_cumulative_time_table_;
    bool use_cumulative_time_table_sync_;
    ::int32_t max_edge_finder_size_;
    bool use_sequence_high_demand_tasks_;
    bool use_all_possible_disjunctions_;
    bool diffn_use_cumulative_;
    bool use_element_rmq_;
    bool skip_locally_optimal_paths_;
    ::int32_t check_solution_period_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConstraintSolverParameters

// .operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;
inline void ConstraintSolverParameters::clear_compress_trail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compress_trail_ = 0;
}
inline ::operations_research::ConstraintSolverParameters_TrailCompression ConstraintSolverParameters::compress_trail() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.compress_trail)
  return _internal_compress_trail();
}
inline void ConstraintSolverParameters::set_compress_trail(::operations_research::ConstraintSolverParameters_TrailCompression value) {
  _internal_set_compress_trail(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.compress_trail)
}
inline ::operations_research::ConstraintSolverParameters_TrailCompression ConstraintSolverParameters::_internal_compress_trail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::operations_research::ConstraintSolverParameters_TrailCompression>(_impl_.compress_trail_);
}
inline void ConstraintSolverParameters::_internal_set_compress_trail(::operations_research::ConstraintSolverParameters_TrailCompression value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compress_trail_ = value;
}

// int32 trail_block_size = 2;
inline void ConstraintSolverParameters::clear_trail_block_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trail_block_size_ = 0;
}
inline ::int32_t ConstraintSolverParameters::trail_block_size() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.trail_block_size)
  return _internal_trail_block_size();
}
inline void ConstraintSolverParameters::set_trail_block_size(::int32_t value) {
  _internal_set_trail_block_size(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.trail_block_size)
}
inline ::int32_t ConstraintSolverParameters::_internal_trail_block_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trail_block_size_;
}
inline void ConstraintSolverParameters::_internal_set_trail_block_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trail_block_size_ = value;
}

// int32 array_split_size = 3;
inline void ConstraintSolverParameters::clear_array_split_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.array_split_size_ = 0;
}
inline ::int32_t ConstraintSolverParameters::array_split_size() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.array_split_size)
  return _internal_array_split_size();
}
inline void ConstraintSolverParameters::set_array_split_size(::int32_t value) {
  _internal_set_array_split_size(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.array_split_size)
}
inline ::int32_t ConstraintSolverParameters::_internal_array_split_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.array_split_size_;
}
inline void ConstraintSolverParameters::_internal_set_array_split_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.array_split_size_ = value;
}

// bool store_names = 4;
inline void ConstraintSolverParameters::clear_store_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_names_ = false;
}
inline bool ConstraintSolverParameters::store_names() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.store_names)
  return _internal_store_names();
}
inline void ConstraintSolverParameters::set_store_names(bool value) {
  _internal_set_store_names(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.store_names)
}
inline bool ConstraintSolverParameters::_internal_store_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.store_names_;
}
inline void ConstraintSolverParameters::_internal_set_store_names(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_names_ = value;
}

// bool name_cast_variables = 5;
inline void ConstraintSolverParameters::clear_name_cast_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_cast_variables_ = false;
}
inline bool ConstraintSolverParameters::name_cast_variables() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.name_cast_variables)
  return _internal_name_cast_variables();
}
inline void ConstraintSolverParameters::set_name_cast_variables(bool value) {
  _internal_set_name_cast_variables(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.name_cast_variables)
}
inline bool ConstraintSolverParameters::_internal_name_cast_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_cast_variables_;
}
inline void ConstraintSolverParameters::_internal_set_name_cast_variables(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_cast_variables_ = value;
}

// bool name_all_variables = 6;
inline void ConstraintSolverParameters::clear_name_all_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_all_variables_ = false;
}
inline bool ConstraintSolverParameters::name_all_variables() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.name_all_variables)
  return _internal_name_all_variables();
}
inline void ConstraintSolverParameters::set_name_all_variables(bool value) {
  _internal_set_name_all_variables(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.name_all_variables)
}
inline bool ConstraintSolverParameters::_internal_name_all_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_all_variables_;
}
inline void ConstraintSolverParameters::_internal_set_name_all_variables(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_all_variables_ = value;
}

// bool profile_propagation = 7;
inline void ConstraintSolverParameters::clear_profile_propagation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_propagation_ = false;
}
inline bool ConstraintSolverParameters::profile_propagation() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.profile_propagation)
  return _internal_profile_propagation();
}
inline void ConstraintSolverParameters::set_profile_propagation(bool value) {
  _internal_set_profile_propagation(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.profile_propagation)
}
inline bool ConstraintSolverParameters::_internal_profile_propagation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_propagation_;
}
inline void ConstraintSolverParameters::_internal_set_profile_propagation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_propagation_ = value;
}

// string profile_file = 8;
inline void ConstraintSolverParameters::clear_profile_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_file_.ClearToEmpty();
}
inline const std::string& ConstraintSolverParameters::profile_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.profile_file)
  return _internal_profile_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConstraintSolverParameters::set_profile_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.profile_file)
}
inline std::string* ConstraintSolverParameters::mutable_profile_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_profile_file();
  // @@protoc_insertion_point(field_mutable:operations_research.ConstraintSolverParameters.profile_file)
  return _s;
}
inline const std::string& ConstraintSolverParameters::_internal_profile_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_file_.Get();
}
inline void ConstraintSolverParameters::_internal_set_profile_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_file_.Set(value, GetArena());
}
inline std::string* ConstraintSolverParameters::_internal_mutable_profile_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.profile_file_.Mutable( GetArena());
}
inline std::string* ConstraintSolverParameters::release_profile_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:operations_research.ConstraintSolverParameters.profile_file)
  return _impl_.profile_file_.Release();
}
inline void ConstraintSolverParameters::set_allocated_profile_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_file_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.profile_file_.IsDefault()) {
    _impl_.profile_file_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.ConstraintSolverParameters.profile_file)
}

// bool profile_local_search = 16;
inline void ConstraintSolverParameters::clear_profile_local_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_local_search_ = false;
}
inline bool ConstraintSolverParameters::profile_local_search() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.profile_local_search)
  return _internal_profile_local_search();
}
inline void ConstraintSolverParameters::set_profile_local_search(bool value) {
  _internal_set_profile_local_search(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.profile_local_search)
}
inline bool ConstraintSolverParameters::_internal_profile_local_search() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_local_search_;
}
inline void ConstraintSolverParameters::_internal_set_profile_local_search(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_local_search_ = value;
}

// bool print_local_search_profile = 17;
inline void ConstraintSolverParameters::clear_print_local_search_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_local_search_profile_ = false;
}
inline bool ConstraintSolverParameters::print_local_search_profile() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.print_local_search_profile)
  return _internal_print_local_search_profile();
}
inline void ConstraintSolverParameters::set_print_local_search_profile(bool value) {
  _internal_set_print_local_search_profile(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.print_local_search_profile)
}
inline bool ConstraintSolverParameters::_internal_print_local_search_profile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.print_local_search_profile_;
}
inline void ConstraintSolverParameters::_internal_set_print_local_search_profile(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_local_search_profile_ = value;
}

// bool trace_propagation = 9;
inline void ConstraintSolverParameters::clear_trace_propagation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_propagation_ = false;
}
inline bool ConstraintSolverParameters::trace_propagation() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.trace_propagation)
  return _internal_trace_propagation();
}
inline void ConstraintSolverParameters::set_trace_propagation(bool value) {
  _internal_set_trace_propagation(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.trace_propagation)
}
inline bool ConstraintSolverParameters::_internal_trace_propagation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trace_propagation_;
}
inline void ConstraintSolverParameters::_internal_set_trace_propagation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_propagation_ = value;
}

// bool trace_search = 10;
inline void ConstraintSolverParameters::clear_trace_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_search_ = false;
}
inline bool ConstraintSolverParameters::trace_search() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.trace_search)
  return _internal_trace_search();
}
inline void ConstraintSolverParameters::set_trace_search(bool value) {
  _internal_set_trace_search(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.trace_search)
}
inline bool ConstraintSolverParameters::_internal_trace_search() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trace_search_;
}
inline void ConstraintSolverParameters::_internal_set_trace_search(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_search_ = value;
}

// bool print_model = 11;
inline void ConstraintSolverParameters::clear_print_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_model_ = false;
}
inline bool ConstraintSolverParameters::print_model() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.print_model)
  return _internal_print_model();
}
inline void ConstraintSolverParameters::set_print_model(bool value) {
  _internal_set_print_model(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.print_model)
}
inline bool ConstraintSolverParameters::_internal_print_model() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.print_model_;
}
inline void ConstraintSolverParameters::_internal_set_print_model(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_model_ = value;
}

// bool print_model_stats = 12;
inline void ConstraintSolverParameters::clear_print_model_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_model_stats_ = false;
}
inline bool ConstraintSolverParameters::print_model_stats() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.print_model_stats)
  return _internal_print_model_stats();
}
inline void ConstraintSolverParameters::set_print_model_stats(bool value) {
  _internal_set_print_model_stats(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.print_model_stats)
}
inline bool ConstraintSolverParameters::_internal_print_model_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.print_model_stats_;
}
inline void ConstraintSolverParameters::_internal_set_print_model_stats(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_model_stats_ = value;
}

// bool print_added_constraints = 13;
inline void ConstraintSolverParameters::clear_print_added_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_added_constraints_ = false;
}
inline bool ConstraintSolverParameters::print_added_constraints() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.print_added_constraints)
  return _internal_print_added_constraints();
}
inline void ConstraintSolverParameters::set_print_added_constraints(bool value) {
  _internal_set_print_added_constraints(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.print_added_constraints)
}
inline bool ConstraintSolverParameters::_internal_print_added_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.print_added_constraints_;
}
inline void ConstraintSolverParameters::_internal_set_print_added_constraints(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_added_constraints_ = value;
}

// bool disable_solve = 15;
inline void ConstraintSolverParameters::clear_disable_solve() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_solve_ = false;
}
inline bool ConstraintSolverParameters::disable_solve() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.disable_solve)
  return _internal_disable_solve();
}
inline void ConstraintSolverParameters::set_disable_solve(bool value) {
  _internal_set_disable_solve(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.disable_solve)
}
inline bool ConstraintSolverParameters::_internal_disable_solve() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_solve_;
}
inline void ConstraintSolverParameters::_internal_set_disable_solve(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_solve_ = value;
}

// bool use_small_table = 101;
inline void ConstraintSolverParameters::clear_use_small_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_small_table_ = false;
}
inline bool ConstraintSolverParameters::use_small_table() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_small_table)
  return _internal_use_small_table();
}
inline void ConstraintSolverParameters::set_use_small_table(bool value) {
  _internal_set_use_small_table(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_small_table)
}
inline bool ConstraintSolverParameters::_internal_use_small_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_small_table_;
}
inline void ConstraintSolverParameters::_internal_set_use_small_table(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_small_table_ = value;
}

// bool use_cumulative_edge_finder = 105;
inline void ConstraintSolverParameters::clear_use_cumulative_edge_finder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_edge_finder_ = false;
}
inline bool ConstraintSolverParameters::use_cumulative_edge_finder() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_cumulative_edge_finder)
  return _internal_use_cumulative_edge_finder();
}
inline void ConstraintSolverParameters::set_use_cumulative_edge_finder(bool value) {
  _internal_set_use_cumulative_edge_finder(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_cumulative_edge_finder)
}
inline bool ConstraintSolverParameters::_internal_use_cumulative_edge_finder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_cumulative_edge_finder_;
}
inline void ConstraintSolverParameters::_internal_set_use_cumulative_edge_finder(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_edge_finder_ = value;
}

// bool use_cumulative_time_table = 106;
inline void ConstraintSolverParameters::clear_use_cumulative_time_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_time_table_ = false;
}
inline bool ConstraintSolverParameters::use_cumulative_time_table() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_cumulative_time_table)
  return _internal_use_cumulative_time_table();
}
inline void ConstraintSolverParameters::set_use_cumulative_time_table(bool value) {
  _internal_set_use_cumulative_time_table(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_cumulative_time_table)
}
inline bool ConstraintSolverParameters::_internal_use_cumulative_time_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_cumulative_time_table_;
}
inline void ConstraintSolverParameters::_internal_set_use_cumulative_time_table(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_time_table_ = value;
}

// bool use_cumulative_time_table_sync = 112;
inline void ConstraintSolverParameters::clear_use_cumulative_time_table_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_time_table_sync_ = false;
}
inline bool ConstraintSolverParameters::use_cumulative_time_table_sync() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_cumulative_time_table_sync)
  return _internal_use_cumulative_time_table_sync();
}
inline void ConstraintSolverParameters::set_use_cumulative_time_table_sync(bool value) {
  _internal_set_use_cumulative_time_table_sync(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_cumulative_time_table_sync)
}
inline bool ConstraintSolverParameters::_internal_use_cumulative_time_table_sync() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_cumulative_time_table_sync_;
}
inline void ConstraintSolverParameters::_internal_set_use_cumulative_time_table_sync(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_cumulative_time_table_sync_ = value;
}

// bool use_sequence_high_demand_tasks = 107;
inline void ConstraintSolverParameters::clear_use_sequence_high_demand_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_sequence_high_demand_tasks_ = false;
}
inline bool ConstraintSolverParameters::use_sequence_high_demand_tasks() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_sequence_high_demand_tasks)
  return _internal_use_sequence_high_demand_tasks();
}
inline void ConstraintSolverParameters::set_use_sequence_high_demand_tasks(bool value) {
  _internal_set_use_sequence_high_demand_tasks(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_sequence_high_demand_tasks)
}
inline bool ConstraintSolverParameters::_internal_use_sequence_high_demand_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_sequence_high_demand_tasks_;
}
inline void ConstraintSolverParameters::_internal_set_use_sequence_high_demand_tasks(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_sequence_high_demand_tasks_ = value;
}

// bool use_all_possible_disjunctions = 108;
inline void ConstraintSolverParameters::clear_use_all_possible_disjunctions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_all_possible_disjunctions_ = false;
}
inline bool ConstraintSolverParameters::use_all_possible_disjunctions() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_all_possible_disjunctions)
  return _internal_use_all_possible_disjunctions();
}
inline void ConstraintSolverParameters::set_use_all_possible_disjunctions(bool value) {
  _internal_set_use_all_possible_disjunctions(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_all_possible_disjunctions)
}
inline bool ConstraintSolverParameters::_internal_use_all_possible_disjunctions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_all_possible_disjunctions_;
}
inline void ConstraintSolverParameters::_internal_set_use_all_possible_disjunctions(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_all_possible_disjunctions_ = value;
}

// int32 max_edge_finder_size = 109;
inline void ConstraintSolverParameters::clear_max_edge_finder_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_edge_finder_size_ = 0;
}
inline ::int32_t ConstraintSolverParameters::max_edge_finder_size() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.max_edge_finder_size)
  return _internal_max_edge_finder_size();
}
inline void ConstraintSolverParameters::set_max_edge_finder_size(::int32_t value) {
  _internal_set_max_edge_finder_size(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.max_edge_finder_size)
}
inline ::int32_t ConstraintSolverParameters::_internal_max_edge_finder_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_edge_finder_size_;
}
inline void ConstraintSolverParameters::_internal_set_max_edge_finder_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_edge_finder_size_ = value;
}

// bool diffn_use_cumulative = 110;
inline void ConstraintSolverParameters::clear_diffn_use_cumulative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diffn_use_cumulative_ = false;
}
inline bool ConstraintSolverParameters::diffn_use_cumulative() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.diffn_use_cumulative)
  return _internal_diffn_use_cumulative();
}
inline void ConstraintSolverParameters::set_diffn_use_cumulative(bool value) {
  _internal_set_diffn_use_cumulative(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.diffn_use_cumulative)
}
inline bool ConstraintSolverParameters::_internal_diffn_use_cumulative() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.diffn_use_cumulative_;
}
inline void ConstraintSolverParameters::_internal_set_diffn_use_cumulative(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diffn_use_cumulative_ = value;
}

// bool use_element_rmq = 111;
inline void ConstraintSolverParameters::clear_use_element_rmq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_element_rmq_ = false;
}
inline bool ConstraintSolverParameters::use_element_rmq() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.use_element_rmq)
  return _internal_use_element_rmq();
}
inline void ConstraintSolverParameters::set_use_element_rmq(bool value) {
  _internal_set_use_element_rmq(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.use_element_rmq)
}
inline bool ConstraintSolverParameters::_internal_use_element_rmq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_element_rmq_;
}
inline void ConstraintSolverParameters::_internal_set_use_element_rmq(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_element_rmq_ = value;
}

// bool skip_locally_optimal_paths = 113;
inline void ConstraintSolverParameters::clear_skip_locally_optimal_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_locally_optimal_paths_ = false;
}
inline bool ConstraintSolverParameters::skip_locally_optimal_paths() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.skip_locally_optimal_paths)
  return _internal_skip_locally_optimal_paths();
}
inline void ConstraintSolverParameters::set_skip_locally_optimal_paths(bool value) {
  _internal_set_skip_locally_optimal_paths(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.skip_locally_optimal_paths)
}
inline bool ConstraintSolverParameters::_internal_skip_locally_optimal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skip_locally_optimal_paths_;
}
inline void ConstraintSolverParameters::_internal_set_skip_locally_optimal_paths(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_locally_optimal_paths_ = value;
}

// int32 check_solution_period = 114;
inline void ConstraintSolverParameters::clear_check_solution_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_solution_period_ = 0;
}
inline ::int32_t ConstraintSolverParameters::check_solution_period() const {
  // @@protoc_insertion_point(field_get:operations_research.ConstraintSolverParameters.check_solution_period)
  return _internal_check_solution_period();
}
inline void ConstraintSolverParameters::set_check_solution_period(::int32_t value) {
  _internal_set_check_solution_period(value);
  // @@protoc_insertion_point(field_set:operations_research.ConstraintSolverParameters.check_solution_period)
}
inline ::int32_t ConstraintSolverParameters::_internal_check_solution_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.check_solution_period_;
}
inline void ConstraintSolverParameters::_internal_set_check_solution_period(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.check_solution_period_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace operations_research


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::operations_research::ConstraintSolverParameters_TrailCompression> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::operations_research::ConstraintSolverParameters_TrailCompression>() {
  return ::operations_research::ConstraintSolverParameters_TrailCompression_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ortools_2fconstraint_5fsolver_2fsolver_5fparameters_2eproto_2epb_2eh
